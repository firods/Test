Approach
1.I have chosen Selenium/Java cause it has direct support for cross domain websites.
2.Selenium has different object identification options ex - xpath/css/linktext etc.
3.Easy integration with BDD cucumber.

Library used to automate Front End
1.I have chosen Selenium as a Java based library to automate UI actions.
2.Selenium is open source library to automate user actions.
3.Selenium is compatible with lot of different tools ex â€“ Junit/TestNG etc.
4.Selenium uses JSON Wire protocol for communication purpose.

Programming language
1.I have chosen JAVA as a programming language.
2.Java is most widely used programming language and lot of libraries available to read/write JSON, excel etc.
3.We can use same programming language for UI as well as API Automation.

Unit testing framework
1.I have chosen TestNG as a unit-testing framework because it is most compatible with cucumber.


What we can do more - 
1. integrate test suite with jenkins pipeline (trigger small suite before every PR merge).
2. run full regression on nightly basis.
3. integreate regression with browser-stack to capture videos/cross browser testing etc.
4. mock API responses to reduce instability of tests and focus on UI testing.
5. add more tests on unit + integration level and less number of tests for e2e.
6. execute test on headless mode for faster execution.
7. implememnt parallel execution for faster execution.
8. Create Automation dashboard to monitor 24*7 Jenkins jobs status. 
9. manage most of automation configuration as a command line arguments.
10. seperate object repository/test data from code for less PRs/maintencace.
11. create reusable test so that we can run those on different environmets.
12. integreate automation with communication tools ex - MS Teams/Slack etc for timely notifications.

